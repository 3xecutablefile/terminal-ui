name: Native CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: app-linux-x64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact: app-macos-x64
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.89.0
          targets: ${{ matrix.target }}
          components: rustfmt, clippy
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            native/target
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Cargo fmt
        run: cargo fmt --all --manifest-path native/Cargo.toml -- --check
      - name: Cargo clippy
        run: cargo clippy --workspace --manifest-path native/Cargo.toml -- -D warnings
      - name: Cargo test
        run: cargo test --workspace --manifest-path native/Cargo.toml
      - name: Build ptyd
        run: cargo build --release --manifest-path native/Cargo.toml -p ptyd --target ${{ matrix.target }}
      - name: Smoke PTY (bounded)
        shell: bash
        run: |
          BIN="native/target/${{ matrix.target }}/release/ptyd"
          printf '%s\n' \
            '{"t":"i","data":"ZWNobyBvaw0K"}' \
            '{"t":"i","data":"ZXhpdA0K"}' \
          | "$BIN" | tee /tmp/ptyd.out
          grep -q '"t":"o"' /tmp/ptyd.out
          grep -q '"t":"x"' /tmp/ptyd.out
      - name: Build app
        run: cargo build --release --manifest-path native/Cargo.toml -p app --target ${{ matrix.target }}
      - name: Package
        run: |
          out="native/target/${{ matrix.target }}/release"
          mkdir -p native/dist/${{ matrix.artifact }}
          cp "$out/app" native/dist/${{ matrix.artifact }}/
          rsync -a native/app/assets/ native/dist/${{ matrix.artifact }}/assets/
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: native/dist/${{ matrix.artifact }}
          if-no-files-found: error
